from src.klarenz.version import *


# Generate Pyproject Toml File
toml = f"""
[build-system]
requires = [ "setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "klarenz"
version = "{version}"
authors = [
    {{ name="Amir Teymuri", email="amiratwork22@gmail.com" }}, 
]
description = "Programmatically generate Lilypond scores, with ease and elegance of pure Python"
readme = "README.md"
requires-python = ">=3.5"
classifiers = [ 
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
]
dependencies = [
    'pytest',
]

[project.urls]
"Homepage" = "https://github.com/teymuri/klarenz.git"
"Bug Tracker" = "https://github.com/teymuri/klarenz/issues"
"""

with open("pyproject.toml", "w") as f:
    f.write(toml)


# Generate README
readme = f"""
[__Klarenz__](https://en.wikipedia.org/wiki/Clarence_Barlow) (current release: __v{version}__) is a highly minimalist Python package (the entire API consists of a single class `Part` and a main processor function `proc`!) for compiling Lilypond sheet music.

For more information and examples please check the [Documentation](https://teymuri.github.io/klarenz-docs/).

# Some Coding Tips
Convert a collection of durations into a progressing beats collection by utilizing `itertools.accumulate`:

```python
from random import choice
from itertools import accumulate

durs = [choice([.25, .5, .75, 1]) for _ in range(4)]
beats = list(accumulate(durs, initial=0))
print(f"Durations: {durs}")
print(f"Beats: {beats}")

# Durations: [0.25, 0.5, 0.5, 0.75]
# Beats: [0, 0.25, 0.75, 1.25, 2.0]
```

# Contributing

If you wish to contribute your code to this repository, please consider the following points:
- Packaging
  - Ensure to update the `src/klarenz/version.py` file and run `python prebuild.py` (and push the changes!) before initiating the build-upload process for each release with:

    ```
    python -m build && twine upload dist/*
    ```

_This README is generated by `prebuild.py`. Never edit it directly by hand! Instead, modify the `readme` variable in the
pre-build file._
"""

with open("README.md", "w") as f:
    f.write(readme)
